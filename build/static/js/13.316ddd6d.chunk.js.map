{"version":3,"sources":["actionCreator/adsActions.js","views/Ads/Ads.js"],"names":["setAdData","payload","type","adsAction","setAdId","RemoteOperations","props","remote","sort","filter","bootstrap4","keyField","data","columns","striped","hover","filterFactory","onTableChange","Ads","useState","setColumns","row","setRow","currentPage","setCurrentPage","sizePerPage","setSizePerPage","totalRecords","setTotalRecords","dispatch","useDispatch","ActionColumn","cell","rowIndex","formatExtraData","color","onClick","history","push","pathname","frontendRoutes","editAds","path","state","creative_id","adQuestions","getAds","query","startIndex","endIndex","apiPost","backendRoutes","ADS","response","apiData","columnData","Object","keys","key","map","dataField","text","convertKeysToNames","textFilter","formatter","error","console","log","useEffect","successRes","errorRes","handleTableChange","sortField","sortOrder","filters","filterQuery","convertFilterObjects","fluid","className","createAds","length","page","totalSize","pageLimit","pageNeighbors","handlePageClick","e","i","preventDefault","handleNextClick","handlePreviousClick","handleSizePerPage","pageSize"],"mappings":"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","file":"static/js/13.316ddd6d.chunk.js","sourcesContent":["import { adsAction } from '../actions';\r\n\r\nexport const setAdData = (payload) => {\r\n    // console.log(\"Data in payload\", payload)\r\n    return {type: adsAction.setAdData, payload};\r\n}\r\n\r\nexport const setAdId = (payload) => {\r\n    return {type: adsAction.setAdId, payload};\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport filterFactory, { textFilter } from \"react-bootstrap-table2-filter\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n\tCard,\r\n\tCardBody,\r\n\tCardHeader,\r\n\tCol,\r\n\tRow,\r\n\tButton,\r\n\tCardFooter,\r\n\tContainer,\r\n} from \"reactstrap\";\r\nimport { frontendRoutes, backendRoutes } from '../../utils/constants';\r\nimport CustomPagination from '../../customComponents/CustomPagination';\r\nimport { convertFilterObjects, convertKeysToNames } from '../../utils/converters';\r\nimport { apiPost } from '../../utils/serviceManager';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setAdData, setAdId } from '../../actionCreator/adsActions';\r\n\r\nconst RemoteOperations = props => (\r\n\t<div>\r\n\t\t<BootstrapTable\r\n\t\t\tremote={{ sort: true, filter: true }}\r\n\t\t\tbootstrap4\r\n\t\t\t// remote\r\n\t\t\tkeyField=\"id\"\r\n\t\t\tdata={props.data}\r\n\t\t\tcolumns={props.columns}\r\n\t\t\tstriped\r\n\t\t\thover\r\n\t\t\t// condensed\r\n\t\t\t//pagination={paginationFactory({ page: props.page, sizePerPage: props.sizePerPage, totalSize: props.totalSize })}\r\n\t\t\tfilter={filterFactory()}\r\n\t\t\tonTableChange={props.onTableChange}\r\n\t\t/>\r\n\t</div>\r\n);\r\n\r\nexport default function Ads(props) {\r\n\tconst [columns, setColumns] = useState([]);\r\n\tconst [row, setRow] = useState([]);\r\n\tconst [currentPage, setCurrentPage] = useState(1)\r\n\tconst [sizePerPage, setSizePerPage] = useState(10)\r\n\tconst [totalRecords, setTotalRecords] = useState(0)\r\n\tconst dispatch = useDispatch()\r\n\t// const [query, setQuery] = {}\r\n\r\n\tfunction ActionColumn(cell, row, rowIndex, formatExtraData) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tprops.history.push({\r\n\t\t\t\t\t\t\tpathname: frontendRoutes.editAds.path,\r\n\t\t\t\t\t\t\tstate: { data: row },\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tEdit\r\n        </Button>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor=\"info\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tdispatch(setAdData(row))\r\n\t\t\t\t\t\tdispatch(setAdId(row.creative_id))\r\n\t\t\t\t\t\tprops.history.push({\r\n\t\t\t\t\t\t\tpathname: frontendRoutes.adQuestions.path,\r\n\t\t\t\t\t\t\tstate: { data: row },\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tQ/A\r\n        </Button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tfunction getAdsLength() {\r\n\t\tapiPost(\r\n\t\t\tbackendRoutes.ADS + 'count',\r\n\t\t\t{},\r\n\t\t\t{ \"Content-Type\": \"application/json\" },\r\n\t\t\tsuccessRes => {\r\n\t\t\t\tconsole.log(\"Total campaigns: \", successRes)\r\n\t\t\t\tsetTotalRecords(successRes.data.data)\r\n\t\t\t},\r\n\t\t\terrorRes => {\r\n\t\t\t\tconsole.log(\"error in Total campaigns api: \", errorRes)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\tfunction getAds(query, startIndex, endIndex) {\r\n\t\tapiPost(\r\n\t\t\tbackendRoutes.ADS + 'get',\r\n\t\t\tquery,\r\n\t\t\t{\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tresponse => {\r\n\t\t\t\t// console.log(\"Api response: \", response)\r\n\t\t\t\tlet apiData = response.data.data;\r\n\t\t\t\tlet columnData = Object.keys(apiData[0])\r\n\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t(key) =>\r\n\t\t\t\t\t\t\t// key !== \"createdAt\" &&\r\n\t\t\t\t\t\t\t// key !== \"updatedAt\" &&\r\n\t\t\t\t\t\t\tkey !== \"questions\"\r\n\t\t\t\t\t\t// key !== \"campaign_id\"\r\n\t\t\t\t\t\t//   key !== \"Owner\" &&\r\n\t\t\t\t\t\t//   key !== \"Monitor\"\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.map((key) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdataField: key,\r\n\t\t\t\t\t\t\t// text: key,\r\n\t\t\t\t\t\t\ttext: convertKeysToNames(key),\r\n\t\t\t\t\t\t\tsort: true,\r\n\t\t\t\t\t\t\tfilter: textFilter()\r\n\t\t\t\t\t\t\t// filter: textFilter({\r\n\t\t\t\t\t\t\t//   // configuration options for filter\r\n\t\t\t\t\t\t\t//   placeholder: \" \",\r\n\t\t\t\t\t\t\t// }),\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\t\t\t\tcolumnData.push({\r\n\t\t\t\t\tformatter: ActionColumn,\r\n\t\t\t\t\t// headerAttrs: { width: 50 },\r\n\t\t\t\t\t// attrs: { width: 50, class: \"EditRow\" },\r\n\t\t\t\t\ttext: \"Actions\",\r\n\t\t\t\t\t// headerStyle: { width: \"50px\" },\r\n\t\t\t\t\t// style: { height: \"30px\" }\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsetColumns(columnData);\r\n\t\t\t\tsetRow(apiData);\r\n\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tconsole.log(\"Api error: \", error)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetAdsLength()\r\n\t\tgetAds(\r\n\t\t\t{\r\n\t\t\t\t\"pagination\": {\r\n\t\t\t\t\t\"page\": currentPage,\r\n\t\t\t\t\t\"page_size\": sizePerPage\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst handleTableChange = (type, { sortField, sortOrder, data, filters }) => {\r\n\t\tconsole.log(\"Operation type: \", type)\r\n\t\tconsole.log(\"sort props: \", { sortField, sortOrder, data, filters })\r\n\r\n\r\n\t\tif (type === 'filter') {\r\n\r\n\t\t\tlet filterQuery = convertFilterObjects(filters)\r\n\t\t\tconsole.log(\"filterQuery: \", filterQuery)\r\n\r\n\t\t\tgetAds(\r\n\t\t\t\t{\r\n\t\t\t\t\t\"pagination\": {\r\n\t\t\t\t\t\t\"page\": currentPage,\r\n\t\t\t\t\t\t\"page_size\": sizePerPage\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfilter: filterQuery\r\n\t\t\t\t}\r\n\r\n\t\t\t)\r\n\r\n\t\t}\r\n\r\n\t\t// if (type === 'pagination') {\r\n\t\t//   const currentIndex = (page - 1) * sizePerPage;\r\n\t\t//   console.log(\"Current index: \", currentIndex)\r\n\t\t//   getAds(\r\n\t\t//     {\r\n\t\t//       \"pagination\": {\r\n\t\t//         \"page\": page,\r\n\t\t//         \"page_size\": sizePerPage,\r\n\r\n\t\t//       }\r\n\t\t//     },\r\n\t\t//     currentIndex,\r\n\t\t//     currentIndex + sizePerPage\r\n\t\t//   )\r\n\t\t// }\r\n\r\n\t\tif (type === 'sort') {\r\n\t\t\tlet result;\r\n\t\t\tif (sortOrder === 'asc') {\r\n\r\n\t\t\t\tgetAds(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"pagination\": {\r\n\t\t\t\t\t\t\t\"page\": currentPage,\r\n\t\t\t\t\t\t\t\"page_size\": sizePerPage\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"order\": [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"desc\": false,\r\n\t\t\t\t\t\t\t\t\"name\": sortField\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\tgetAds(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"pagination\": {\r\n\t\t\t\t\t\t\t\"page\": currentPage,\r\n\t\t\t\t\t\t\t\"page_size\": sizePerPage\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"order\": [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"desc\": true,\r\n\t\t\t\t\t\t\t\t\"name\": sortField\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\tconst displayTable = () => {\r\n\t\tif (columns.length > 0 || row.length > 0) {\r\n\t\t\treturn (\r\n\t\t\t\t<RemoteOperations\r\n\t\t\t\t\tdata={row}\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\tonTableChange={handleTableChange}\r\n\t\t\t\t\tpage={currentPage}\r\n\t\t\t\t\tsizePerPage={sizePerPage}\r\n\t\t\t\t\ttotalSize={14}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSizePerPage = (pageSize) => {\r\n\t\t// e.preventDefault();\r\n\t\t// let selected = data.selected;\r\n\t\t// let offset = Math.ceil(selected * sizePerPage);\r\n\t\tsetSizePerPage(() => {\r\n\t\t\tsetCurrentPage(1)\r\n\t\t\tgetAds(\r\n\t\t\t\t{\r\n\t\t\t\t\t\"pagination\": {\r\n\t\t\t\t\t\t\"page\": 1,\r\n\t\t\t\t\t\t\"page_size\": pageSize\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\treturn pageSize\r\n\t\t})\r\n\t};\r\n\r\n\tconst handlePageClick = (e, i) => {\r\n\t\te.preventDefault();\r\n\t\t// let selected = data.selected;\r\n\t\t// let offset = Math.ceil(selected * sizePerPage);\r\n\t\tsetCurrentPage(() => {\r\n\t\t\tgetAds(\r\n\t\t\t\t{\r\n\t\t\t\t\t\"pagination\": {\r\n\t\t\t\t\t\t\"page\": i,\r\n\t\t\t\t\t\t\"page_size\": sizePerPage\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\treturn i\r\n\t\t})\r\n\t};\r\n\r\n\tconst handlePreviousClick = (e) => {\r\n\t\tsetCurrentPage(() => {\r\n\t\t\tgetAds(\r\n\t\t\t\t{\r\n\t\t\t\t\t\"pagination\": {\r\n\t\t\t\t\t\t\"page\": currentPage - 1,\r\n\t\t\t\t\t\t\"page_size\": sizePerPage\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\treturn currentPage - 1\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleNextClick = (e) => {\r\n\t\tsetCurrentPage(() => {\r\n\t\t\tgetAds(\r\n\t\t\t\t{\r\n\t\t\t\t\t\"pagination\": {\r\n\t\t\t\t\t\t\"page\": currentPage + 1,\r\n\t\t\t\t\t\t\"page_size\": sizePerPage\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\treturn currentPage + 1\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container fluid={true}>\r\n\t\t\t<div className=\"animated fadeIn\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col >\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<CardHeader className=\"d-flex flex-row justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa fa-table\"></i> Ads list\r\n                  {/* <small className=\"text-muted\">list</small> */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tcolor=\"success\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tprops.history.push(frontendRoutes.createAds.path);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tCreate Ad\r\n                </Button>\r\n\t\t\t\t\t\t\t</CardHeader>\r\n\t\t\t\t\t\t\t<CardBody>{displayTable()}</CardBody>\r\n\t\t\t\t\t\t\t<CardFooter>\r\n\t\t\t\t\t\t\t\t{/* {renderPagination(totalRecords, sizePerPage, currentPage)} */}\r\n\t\t\t\t\t\t\t\t<CustomPagination\r\n\t\t\t\t\t\t\t\t\ttotalRecords={totalRecords}\r\n\t\t\t\t\t\t\t\t\tpageLimit={sizePerPage}\r\n\t\t\t\t\t\t\t\t\tpageNeighbors={0}\r\n\t\t\t\t\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\t\t\t\t\thandlePageClick={handlePageClick}\r\n\t\t\t\t\t\t\t\t\thandleNextClick={handleNextClick}\r\n\t\t\t\t\t\t\t\t\thandlePreviousClick={handlePreviousClick}\r\n\t\t\t\t\t\t\t\t\thandleSizePerPage={handleSizePerPage}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</CardFooter>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t)\r\n\r\n}\r\n\r\n"],"sourceRoot":""}