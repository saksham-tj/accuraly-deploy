{"version":3,"sources":["views/Ads/questions/EditQAForm.js"],"names":["CreateQAForm","props","quesData","location","state","data","undefined","history","push","pathname","frontendRoutes","dashboard","path","quesText","useInput","question","handleValidation","validations","EMPTY","useState","answers","setAnswers","alert","useAlert","submit","useSubmit","formData","apiPost","backendRoutes","UPDATE_QUESTION","successRes","console","log","changeVisibility","handleMessage","messages","QUESTION_UPDATED","setTimeout","errorRes","response","message","NETWORK_FAILURE","callUpdateQuestion","question_id","handleRemove","idx","event","preventDefault","ansId","answer_id","answerId","DELETE_ANSWER","values","splice","deleteAnswer","className","xl","color","isOpen","isVisible","toggle","noValidate","addonType","type","placeholder","helperText","map","field","key","value","answer","onChange","e","i","target","handleChange","outline","label","checked","correct","dataOn","dataOff","handleSwitchChange","onClick","block"],"mappings":"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","file":"static/js/18.ef46d173.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Row, Col, Card, CardHeader, CardBody, Form, Button, FormFeedback, Input, InputGroupText, InputGroupAddon, InputGroup, Alert } from 'reactstrap'\r\nimport { useInput, useSubmit } from \"../../../hooks/form\";\r\nimport { handleValidation, validations } from \"../../../utils/validations\";\r\nimport { AppSwitch } from '@coreui/react'\r\nimport { frontendRoutes, messages } from '../../../utils/constants';\r\nimport { apiPost } from '../../../utils/serviceManager';\r\nimport { backendRoutes } from '../../../utils/constants';\r\nimport useAlert from '../../../hooks/useAlert';\r\n\r\nexport default function CreateQAForm(props) {\r\n\r\n\tconst quesData = props.location.state ? props.location.state.data : undefined\r\n\r\n\tif (!quesData) {\r\n\t\tprops.history.push({\r\n\t\t\tpathname: frontendRoutes.dashboard.path,\r\n\t\t})\r\n\t}\r\n\r\n\t// console.log(\"Options array: \", quesData)\r\n\r\n\tconst quesText = useInput(\"quesText\", quesData.question, handleValidation, validations.EMPTY);\r\n\tconst [answers, setAnswers] = useState(quesData.answers);\r\n\tconst alert = useAlert(false);\r\n\tconst submit = useSubmit([quesText], handleSuccess);\r\n\r\n\tfunction handleAlertVisibility() {\r\n\t\talert.changeVisibility(false);\r\n\t}\r\n\r\n\tfunction handleSuccess(formData) {\r\n\t\tformData = { question: formData.quesText, \"answers\": answers, question_id: quesData.question_id }\r\n\t\tcallUpdateQuestion(formData)\r\n\t\tconsole.log(\"Data Length==> \", formData);\r\n\r\n\t}\r\n\r\n\tfunction callUpdateQuestion(formData) {\r\n\t\tapiPost(\r\n\t\t\tbackendRoutes.UPDATE_QUESTION,\r\n\t\t\t{\r\n\t\t\t\t\"data\": formData\r\n\t\t\t},\r\n\t\t\t{},\r\n\t\t\tsuccessRes => {\r\n\t\t\t\tconsole.log(\"successRes\", successRes)\r\n\t\t\t\t// setQuesCount(quesCount + 1)\r\n\t\t\t\talert.changeVisibility(true);\r\n\t\t\t\talert.handleMessage(messages.QUESTION_UPDATED);\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\talert.changeVisibility(false);\r\n\t\t\t\t}, 5000);\r\n\t\t\t},\r\n\t\t\terrorRes => {\r\n\t\t\t\tconsole.log(\"errorRes\", errorRes)\r\n\t\t\t\tif (errorRes.response && errorRes.response.data) {\r\n\t\t\t\t\talert.handleMessage(errorRes.response.data.message);\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert.handleMessage(messages.NETWORK_FAILURE);\r\n\t\t\t\t}\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\talert.changeVisibility(false);\r\n\t\t\t\t}, 5000);\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\tfunction handleChange(i, event) {\r\n\t\tconst values = [...answers];\r\n\t\tvalues[i].answer = event.target.value;\r\n\t\tsetAnswers(values);\r\n\t}\r\n\r\n\tfunction handleSwitchChange(i, event) {\r\n\t\tconst values = [...answers];\r\n\t\tvalues[i].correct = event.target['checked'];\r\n\t\tsetAnswers(values);\r\n\t}\r\n\r\n\tfunction handleAdd() {\r\n\t\tconst values = [...answers];\r\n\t\tif (values.length <= 4) {\r\n\t\t\tvalues.push({ answer: null, correct: false });\r\n\t\t\tsetAnswers(values);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"maximum upto 5 answers can be added.\")\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction handleRemove(idx, event) {\r\n\t\tevent.preventDefault()\r\n\t\tconst values = [...answers];\r\n\t\tconst ansId = values[idx].answer_id\r\n\r\n\t\tconsole.log(\"Deleted answer id: \", ansId)\r\n\r\n\t\tdeleteAnswer(ansId, idx)\r\n\r\n\t\t// values.splice(i, 1);\r\n\t\t// setAnswers(values);\r\n\t}\r\n\r\n\tfunction deleteAnswer(answerId, idx) {\r\n\t\tapiPost(\r\n\t\t\tbackendRoutes.DELETE_ANSWER,\r\n\t\t\t{\r\n\t\t\t\t'answer_id': answerId\r\n\t\t\t},\r\n\t\t\t{},\r\n\t\t\tsuccessRes => {\r\n\t\t\t\tconsole.log(\"Answer deleted successfully: \", successRes)\r\n\t\t\t\tconst values = [...answers];\r\n\t\t\t\tvalues.splice(idx, 1);\r\n\t\t\t\tsetAnswers(values);\r\n\t\t\t},\r\n\t\t\terrorRes => {\r\n\t\t\t\tconsole.log(\"Answer deleted error: \", errorRes)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\tfunction renderAnswers() {\r\n\t\treturn (\r\n\t\t\tanswers.map((field, idx) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"row align-items-center justify-content-between\" color='red' key={`${field}-${idx}`}>\r\n\t\t\t\t\t\t<div className=\"col-4\">\r\n\t\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t<InputGroupAddon addonType=\"prepend\">\r\n\t\t\t\t\t\t\t\t\t<InputGroupText>\r\n\t\t\t\t\t\t\t\t\t\t{/* <i className=\"icon-screen-desktop\"></i> */}\r\n\t\t\t\t\t\t\t\t\t\t{/* <i> {idx + 1} </i> */}\r\n\t\t\t\t\t\t\t\t\t\t{idx + 1}\r\n\t\t\t\t\t\t\t\t\t</InputGroupText>\r\n\t\t\t\t\t\t\t\t</InputGroupAddon>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Option\"\r\n\t\t\t\t\t\t\t\t\tvalue={field.answer || \"\"}\r\n\t\t\t\t\t\t\t\t\tonChange={e => handleChange(idx, e)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{/* <FormFeedback>{optionText.helperText}</FormFeedback> */}\r\n\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"col-3\">\r\n\t\t\t\t\t\t\t<div className=\"mb-3 row align-items-center justify-content-start\">\r\n\t\t\t\t\t\t\t\tIs Correct Option -\r\n\t\t\t\t\t\t\t\t\t<AppSwitch\r\n\t\t\t\t\t\t\t\t\tclassName={'mx-1'}\r\n\t\t\t\t\t\t\t\t\tcolor={'primary'}\r\n\t\t\t\t\t\t\t\t\toutline={'alt'}\r\n\t\t\t\t\t\t\t\t\tlabel\r\n\t\t\t\t\t\t\t\t\tchecked={field.correct}\r\n\t\t\t\t\t\t\t\t\tdataOn={'\\u2713'}\r\n\t\t\t\t\t\t\t\t\tdataOff={'\\u2715'}\r\n\t\t\t\t\t\t\t\t\tonChange={e => handleSwitchChange(idx, e)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tidx > 1 ? (\r\n\t\t\t\t\t\t\t\t<div className=\"col-3\">\r\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => handleRemove(idx, e)}>Delete</Button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-3\">\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})\r\n\r\n\t\t)\r\n\t}\r\n\r\n\t// console.log(\"answers and values: \", answers)\r\n\r\n\treturn (\r\n\t\t<div className=\"animated fadeIn\">\r\n\t\t\t<Row>\r\n\t\t\t\t<Col xl=\"12\">\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<CardHeader>\r\n\t\t\t\t\t\t\t{/* <i className=\"fa fa-align-justify\"></i> Questions{\" \"}\r\n\t\t\t\t\t\t<small className=\"text-muted\">creation form</small> */}\r\n\t\t\t\t\t\t\t<strong><i className=\"icon-info pr-1\"></i></strong> Question id: {quesData.question_id}\r\n\r\n\t\t\t\t\t\t</CardHeader>\r\n\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t<Alert\r\n\t\t\t\t\t\t\t\tcolor=\"danger\"\r\n\t\t\t\t\t\t\t\tisOpen={alert.isVisible}\r\n\t\t\t\t\t\t\t\ttoggle={handleAlertVisibility}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{alert.message}\r\n\t\t\t\t\t\t\t</Alert>\r\n\r\n\t\t\t\t\t\t\t<Form noValidate {...submit.props}>\r\n\t\t\t\t\t\t\t\t<h1>Edit Question</h1>\r\n\t\t\t\t\t\t\t\t{/* <p className=\"text-muted\"></p> */}\r\n\t\t\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t<InputGroupAddon addonType=\"prepend\">\r\n\t\t\t\t\t\t\t\t\t\t<InputGroupText>\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"icon-screen-desktop\"></i>\r\n\t\t\t\t\t\t\t\t\t\t</InputGroupText>\r\n\t\t\t\t\t\t\t\t\t</InputGroupAddon>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Question\"\r\n\t\t\t\t\t\t\t\t\t\t{...quesText.props}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<FormFeedback>{quesText.helperText}</FormFeedback>\r\n\t\t\t\t\t\t\t\t</InputGroup>\r\n\r\n\t\t\t\t\t\t\t\t{renderAnswers()}\r\n\r\n\t\t\t\t\t\t\t\t{/* <Button color=\"primary\" onClick={() => handleAdd()}>\r\n\t\t\t\t\t\t\t\t\tAdd Option\r\n\t\t\t\t\t\t\t\t</Button> */}\r\n\t\t\t\t\t\t\t\t{/* <p></p> */}\r\n\t\t\t\t\t\t\t\t<Button color=\"success\" block>\r\n\t\t\t\t\t\t\t\t\tEdit Question\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Form>\r\n\r\n\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\n"],"sourceRoot":""}