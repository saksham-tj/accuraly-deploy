{"version":3,"sources":["views/Ads/questions/CreateQAForm.js"],"names":["CreateQAForm","props","adData","location","state","data","creative_id","questions","quesText","useInput","handleValidation","validations","EMPTY","useState","answer","correct","answers","setAnswers","length","quesCount","setQuesCount","alert","useAlert","submit","useSubmit","formData","question","isSubmit","forEach","ans","i","changeVisibility","handleMessage","setTimeout","console","log","apiPost","backendRoutes","INSERT_QUESTION","successRes","messages","QUESTION_CREATED","errorRes","response","message","NETWORK_FAILURE","callInsertQuestion","clearInput","undefined","history","push","pathname","frontendRoutes","dashboard","path","className","xl","color","isOpen","isVisible","toggle","noValidate","addonType","type","placeholder","helperText","map","field","idx","key","value","onChange","e","event","values","target","handleChange","outline","label","checked","dataOn","dataOff","handleSwitchChange","onClick","splice","handleRemove","handleAdd","block"],"mappings":"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","file":"static/js/17.4393453a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Row, Col, Card, CardHeader, CardBody, Form, Button, FormFeedback, Input, InputGroupText, InputGroupAddon, InputGroup, Alert } from 'reactstrap'\r\nimport { useInput, useSubmit } from \"../../../hooks/form\";\r\nimport { handleValidation, validations } from \"../../../utils/validations\";\r\nimport { AppSwitch } from '@coreui/react'\r\nimport { frontendRoutes, messages } from '../../../utils/constants';\r\nimport { apiPost } from '../../../utils/serviceManager';\r\nimport { backendRoutes } from '../../../utils/constants';\r\nimport useAlert from '../../../hooks/useAlert';\r\n\r\nexport default function CreateQAForm(props) {\r\n\r\n\tconst adData = props.location.state ? props.location.state.data : { creative_id: '', questions: [] };\r\n\tconst quesText = useInput(\"quesText\", \"\", handleValidation, validations.EMPTY);\r\n\tconst [answers, setAnswers] = useState([{ answer: null, correct: false }, { answer: null, correct: false }]);\r\n\tconst [quesCount, setQuesCount] = useState(adData.questions.length)\r\n\tconst alert = useAlert(false);\r\n\r\n\tconst submit = useSubmit([quesText], handleSuccess);\r\n\r\n\tif (props.location.state === undefined) {\r\n\t\tprops.history.push({\r\n\t\t\tpathname: frontendRoutes.dashboard.path,\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tfunction handleAlertVisibility() {\r\n\t\talert.changeVisibility(false);\r\n\t}\r\n\r\n\tfunction handleSuccess(formData) {\r\n\t\tformData = { question: formData.quesText, \"answers\": answers, \"creative_id\": adData.creative_id }\r\n\t\tlet isSubmit = false\r\n\r\n\t\tanswers.forEach((ans, i) => {\r\n\t\t\tif (!ans.answer) {\r\n\t\t\t\talert.changeVisibility(true);\r\n\t\t\t\talert.handleMessage(\"Please fill all the options to continue.\");\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\talert.changeVisibility(false);\r\n\t\t\t\t}, 3000);\r\n\t\t\t\tisSubmit = false\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tisSubmit = true\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (isSubmit) {\r\n\t\t\tconsole.log(\"Data Length==> \", formData);\r\n\r\n\t\t\tcallInsertQuestion(formData)\r\n\t\t\tquesText.clearInput();\r\n\t\t\tsetAnswers([{ answer: null, correct: false }, { answer: null, correct: false }])\r\n\t\t\t// setAnswers((ans) => {\r\n\t\t\t// \tans = ans.map((data, i) => {\r\n\t\t\t// \t\treturn data.answer = ''\r\n\t\t\t// \t})\r\n\t\t\t// \treturn ans\r\n\t\t\t// })\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction callInsertQuestion(formData) {\r\n\t\tapiPost(\r\n\t\t\tbackendRoutes.INSERT_QUESTION,\r\n\t\t\t{\r\n\t\t\t\t\"data\": formData\r\n\t\t\t},\r\n\t\t\t{},\r\n\t\t\tsuccessRes => {\r\n\t\t\t\tconsole.log(\"successRes\", successRes)\r\n\t\t\t\tsetQuesCount(quesCount + 1)\r\n\t\t\t\talert.changeVisibility(true);\r\n\t\t\t\talert.handleMessage(messages.QUESTION_CREATED);\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\talert.changeVisibility(false);\r\n\t\t\t\t}, 5000);\r\n\t\t\t},\r\n\t\t\terrorRes => {\r\n\t\t\t\tconsole.log(\"errorRes\", errorRes)\r\n\t\t\t\tif (errorRes.response && errorRes.response.data) {\r\n\t\t\t\t\talert.handleMessage(errorRes.response.data.message);\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert.handleMessage(messages.NETWORK_FAILURE);\r\n\t\t\t\t}\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\talert.changeVisibility(false);\r\n\t\t\t\t}, 5000);\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\tfunction handleChange(i, event) {\r\n\t\tconst values = [...answers];\r\n\t\tvalues[i].answer = event.target.value;\r\n\t\tsetAnswers(values);\r\n\t}\r\n\r\n\tfunction handleSwitchChange(i, event) {\r\n\t\tconst values = [...answers];\r\n\t\tvalues[i].correct = event.target['checked'];\r\n\t\tsetAnswers(values);\r\n\t}\r\n\r\n\tfunction handleAdd() {\r\n\t\tconst values = [...answers];\r\n\t\tif (values.length <= 4) {\r\n\t\t\tvalues.push({ answer: null, correct: false });\r\n\t\t\tsetAnswers(values);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"maximum upto 5 answers can be added.\")\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction handleRemove(i) {\r\n\t\tconst values = [...answers];\r\n\r\n\t\tvalues.splice(i, 1);\r\n\t\tsetAnswers(values);\r\n\t}\r\n\r\n\tfunction renderAnswers() {\r\n\t\treturn (\r\n\t\t\tanswers.map((field, idx) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"row align-items-center justify-content-between\" color='red' key={`${field}-${idx}`}>\r\n\t\t\t\t\t\t<div className=\"col-4\">\r\n\t\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t<InputGroupAddon addonType=\"prepend\">\r\n\t\t\t\t\t\t\t\t\t<InputGroupText>\r\n\t\t\t\t\t\t\t\t\t\t{/* <i className=\"icon-screen-desktop\"></i> */}\r\n\t\t\t\t\t\t\t\t\t\t{/* <i> {idx + 1} </i> */}\r\n\t\t\t\t\t\t\t\t\t\t{idx + 1}\r\n\t\t\t\t\t\t\t\t\t</InputGroupText>\r\n\t\t\t\t\t\t\t\t</InputGroupAddon>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Option\"\r\n\t\t\t\t\t\t\t\t\tvalue={field.answer || \"\"}\r\n\t\t\t\t\t\t\t\t\tonChange={e => handleChange(idx, e)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{/* <FormFeedback>{optionText.helperText}</FormFeedback> */}\r\n\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"col-3\">\r\n\t\t\t\t\t\t\t<div className=\"mb-3 row align-items-center justify-content-start\">\r\n\t\t\t\t\t\t\t\tIs Correct Option -\r\n\t\t\t\t\t\t\t\t\t<AppSwitch\r\n\t\t\t\t\t\t\t\t\tclassName={'mx-1'}\r\n\t\t\t\t\t\t\t\t\tcolor={'primary'}\r\n\t\t\t\t\t\t\t\t\toutline={'alt'}\r\n\t\t\t\t\t\t\t\t\tlabel\r\n\t\t\t\t\t\t\t\t\tchecked={field.correct}\r\n\t\t\t\t\t\t\t\t\tdataOn={'\\u2713'}\r\n\t\t\t\t\t\t\t\t\tdataOff={'\\u2715'}\r\n\t\t\t\t\t\t\t\t\tonChange={e => handleSwitchChange(idx, e)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tidx > 1 ? (\r\n\t\t\t\t\t\t\t\t<div className=\"col-3\">\r\n\t\t\t\t\t\t\t\t\t<Button onClick={() => handleRemove(idx)}>Delete</Button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-3\">\r\n\t\t\t\t\t\t\t\t\t\t{/* <Button onClick={() => handleRemove(idx)}>Delete</Button> */}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})\r\n\r\n\t\t)\r\n\t}\r\n\r\n\t// console.log(\"answers and values: \", answers)\r\n\r\n\treturn (\r\n\t\t<div className=\"animated fadeIn\">\r\n\t\t\t<Row>\r\n\t\t\t\t<Col xl=\"12\">\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<CardHeader>\r\n\t\t\t\t\t\t\t{/* <i className=\"fa fa-align-justify\"></i> Questions{\" \"}\r\n\t\t\t\t\t\t\t<small className=\"text-muted\">creation form</small> */}\r\n\t\t\t\t\t\t\t<strong><i className=\"icon-info pr-1\"></i></strong> Ad_id: {adData.creative_id}\r\n\r\n\t\t\t\t\t\t</CardHeader>\r\n\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t<Alert\r\n\t\t\t\t\t\t\t\tcolor=\"danger\"\r\n\t\t\t\t\t\t\t\tisOpen={alert.isVisible}\r\n\t\t\t\t\t\t\t\ttoggle={handleAlertVisibility}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{alert.message}\r\n\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tquesCount <= 9 ? (\r\n\t\t\t\t\t\t\t\t\t<Form noValidate {...submit.props}>\r\n\t\t\t\t\t\t\t\t\t\t<h1>Add Questions</h1>\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted\">{10 - quesCount} more questions can be added </p>\r\n\t\t\t\t\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<InputGroupAddon addonType=\"prepend\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<InputGroupText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"icon-screen-desktop\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</InputGroupText>\r\n\t\t\t\t\t\t\t\t\t\t\t</InputGroupAddon>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Question\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t{...quesText.props}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormFeedback>{quesText.helperText}</FormFeedback>\r\n\t\t\t\t\t\t\t\t\t\t</InputGroup>\r\n\r\n\t\t\t\t\t\t\t\t\t\t{renderAnswers()}\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Button color=\"primary\" onClick={() => handleAdd()}>\r\n\t\t\t\t\t\t\t\t\t\t\tAdd Option\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t<p></p>\r\n\t\t\t\t\t\t\t\t\t\t<Button color=\"success\" block>\r\n\t\t\t\t\t\t\t\t\t\t\tCreate Question\r\n                </Button>\r\n\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<h1>No more questions can be added! Max limit is 10.</h1>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nfunction Option({ getOptions, optionId, deleteOption }) {\r\n\tconst optionText = useInput({ optionId }, \"\", handleValidation, validations.EMPTY);\r\n\tconst [isCorrect, setIsCorrect] = useState(false)\r\n\tlet optionData = {\r\n\t\tanswer: optionText,\r\n\t\tcorrect: isCorrect,\r\n\t\toptionId: optionId\r\n\t}\r\n\tgetOptions(optionData)\r\n\tfunction handleSwitchChange(e) {\r\n\t\tsetIsCorrect(e.target['checked'])\r\n\t}\r\n\treturn (\r\n\t\t// <Row xl=\"12\">\r\n\t\t// \t<Col sm={{ size: 'auto', offset: 0 }}>\r\n\t\t// \t\t<InputGroup className=\"mb-3\">\r\n\t\t// \t\t\t<InputGroupAddon addonType=\"prepend\">\r\n\t\t// \t\t\t\t<InputGroupText>\r\n\t\t// \t\t\t\t\t<i className=\"icon-screen-desktop\"></i>\r\n\t\t// \t\t\t\t</InputGroupText>\r\n\t\t// \t\t\t</InputGroupAddon>\r\n\t\t// \t\t\t<Input\r\n\t\t// \t\t\t\ttype=\"text\"\r\n\t\t// \t\t\t\tplaceholder=\"Question\"\r\n\t\t// \t\t\t\t{...optionText.props}\r\n\t\t// \t\t\t/>\r\n\t\t// \t\t\t<FormFeedback>{optionText.helperText}</FormFeedback>\r\n\t\t// \t\t</InputGroup>\r\n\t\t// \t</Col>\r\n\t\t// \t<Col sm={{ size: 'auto', offset: 2}}>\r\n\t\t// \t\t<Row>\r\n\t\t// \t\t\tIs Correct Option -\r\n\t\t// \t\t<AppSwitch className={'mx-1'} color={'primary'} outline={'alt'} label checked dataOn={'\\u2713'} dataOff={'\\u2715'} />\r\n\t\t// \t\t</Row>\r\n\t\t// \t</Col>\r\n\t\t// </Row>\r\n\t\t<div className=\"container-fluid\">\r\n\t\t\t<div className=\"row align-items-center justify-content-between\" color='red'>\r\n\t\t\t\t<div className=\"col-4\">\r\n\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t<InputGroupAddon addonType=\"prepend\">\r\n\t\t\t\t\t\t\t<InputGroupText>\r\n\t\t\t\t\t\t\t\t<i className=\"icon-screen-desktop\"></i>\r\n\t\t\t\t\t\t\t</InputGroupText>\r\n\t\t\t\t\t\t</InputGroupAddon>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Option\"\r\n\t\t\t\t\t\t\t{...optionText.props}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FormFeedback>{optionText.helperText}</FormFeedback>\r\n\t\t\t\t\t</InputGroup>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"col-3\">\r\n\t\t\t\t\t<div className=\"mb-3 row align-items-center justify-content-start\">\r\n\t\t\t\t\t\tIs Correct Option -\r\n\t\t\t\t\t<AppSwitch\r\n\t\t\t\t\t\t\tclassName={'mx-1'}\r\n\t\t\t\t\t\t\tcolor={'primary'}\r\n\t\t\t\t\t\t\toutline={'alt'}\r\n\t\t\t\t\t\t\tlabel\r\n\t\t\t\t\t\t\tchecked={isCorrect}\r\n\t\t\t\t\t\t\tdataOn={'\\u2713'}\r\n\t\t\t\t\t\t\tdataOff={'\\u2715'}\r\n\t\t\t\t\t\t\tonChange={handleSwitchChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-3\">\r\n\t\t\t\t\t{/* <div className=\"mb-3 row align-items-center justify-content-start\">\r\n\t\t\t\t\tIs Correct Option -\r\n\t\t\t\t\t<AppSwitch \r\n\t\t\t\t\t\tclassName={'mx-1'} \r\n\t\t\t\t\t\tcolor={'primary'} \r\n\t\t\t\t\t\toutline={'alt'} F\r\n\t\t\t\t\t\tlabel \r\n\t\t\t\t\t\tchecked={isCorrect}\r\n\t\t\t\t\t\tdataOn={'\\u2713'} \r\n\t\t\t\t\t\tdataOff={'\\u2715'} \r\n\t\t\t\t\t\tonChange = {handleSwitchChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t</div> */}\r\n\t\t\t\t\t<Button onClick={(e) => deleteOption(e, optionId)}>Delete</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n\t)\r\n}\r\n"],"sourceRoot":""}