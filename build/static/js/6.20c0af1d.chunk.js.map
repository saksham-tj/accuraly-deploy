{"version":3,"sources":["utils/constants.js","utils/serviceManager.js","utils/validations.js","hooks/form.js","hooks/useAlert.js","customComponents/CustomPagination.js","utils/converters.js","_nav.js","views/Campaigns/Campaigns.js","routes.js","views/Campaigns/CreateCampaign.js","containers/DefaultLayout/DefaultLayout.js"],"names":["backendRoutes","BASE_URL","LOGIN","USER_REGISTRATION","FORGOT_PASSWORD","UPLOAD_LOGO","UPLOAD_CLIP","USERS","CAMPAIGN","ADS","CAMPAIGN_ADS","INSERT_QUESTION","UPDATE_QUESTION","DELETE_QUESTION","DELETE_ANSWER","frontendRoutes","login","path","name","register","forgotPassword","home","dashboard","campaigns","createCampaigns","editCampaigns","ads","createAds","editAds","adQuestions","createAdQuestions","editAdQuestions","messages","EMAIL_SENT","NETWORK_FAILURE","AD_CREATED","AD_UPDATED","QUESTION_CREATED","QUESTION_UPDATED","apiPost","url","body","requestHeader","responseSuccess","responseErr","axios","baseURL","method","data","headers","then","response","catch","err","validations","EMAIL","pattern","message","NUMBER","EMPTY","PASSWORD","handleValidation","value","regex","match","useInput","defaultValue","validate","useState","setValue","error","setError","errorMessage","setErrorMessage","handleChange","e","target","clearInput","handleBlur","handleValidate","isValid","props","onChange","onBlur","valid","invalid","helperText","useSubmit","inputs","success","errorItems","setErrorItems","onSubmit","preventDefault","filter","input","console","log","length","forEach","useAlert","visibility","React","isVisible","setIsVisible","setMessage","handleMessage","changeVisibility","bool","CustomPagination","isDropDownOpen","setIsDropDownOpen","totalPages","Math","ceil","totalRecords","pageLimit","className","isOpen","toggle","caret","onClick","handleSizePerPage","disabled","currentPage","previous","tag","handlePreviousClick","Array","map","page","i","active","key","handlePageClick","href","next","handleNextClick","convertFilterObjects","filters","filterKeys","Object","keys","filterValues","values","filterQuery","val","index","filterVal","convertKeysToNames","items","icon","badge","variant","text","title","wrapper","element","attributes","class","RemoteSort","remote","sort","bootstrap4","keyField","columns","striped","hover","filterFactory","onTableChange","Dashboard","lazy","EditCampaign","Ads","AdCreationForm","EditAd","AdQuestions","CreateQAForm","EditQAForm","routes","exact","component","setColumns","row","setRow","setCurrentPage","sizePerPage","setSizePerPage","setTotalRecords","ActionColumn","cell","rowIndex","formatExtraData","Button","color","history","push","pathname","state","getCampaigns","query","startIndex","endIndex","apiData","columnData","dataField","textFilter","formatter","useEffect","successRes","errorRes","handleTableChange","type","sortField","sortOrder","Container","fluid","Row","Col","xl","Card","CardHeader","CardBody","totalSize","CardFooter","pageNeighbors","pageSize","description","Date","startDate","setStartDate","endDate","setEndDate","adOptions","setAdOptions","alert","submit","formData","start","toISOString","end","setTimeout","createCampaign","handleSelectInput","optionsArr","label","ad_id","Alert","Form","noValidate","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","autoComplete","FormFeedback","selected","date","showTimeSelect","isMulti","options","classNamePrefix","renderAdSelect","block","DefaultAside","DefaultHeader","DefaultLayout","loading","this","fixed","fallback","onLogout","signOut","display","navConfig","navigation","router","appRoutes","route","idx","render","from","to","Component"],"mappings":"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","file":"static/js/6.20c0af1d.chunk.js","sourcesContent":["export const backendRoutes = {\r\n  BASE_URL: \"http://core.skipquest.com/\",\r\n  LOGIN: \"auth/signin\",\r\n  USER_REGISTRATION: \"users/registration\",\r\n  FORGOT_PASSWORD: \"auth/forgot-password\",\r\n  UPLOAD_LOGO: \"logos\",\r\n  UPLOAD_CLIP: \"clips\",\r\n  USERS: \"users/\",\r\n  CAMPAIGN: 'campaign/',\r\n  ADS: 'creative/',\r\n  CAMPAIGN_ADS: 'campaign/creative/',\r\n  INSERT_QUESTION: 'creative/question/insert',\r\n  UPDATE_QUESTION: 'creative/question/update',\r\n  DELETE_QUESTION: 'creative/question/delete',\r\n  DELETE_ANSWER: 'creative/question/answer/delete'\r\n};\r\n\r\nexport const frontendRoutes = {\r\n  login: { path: \"/login\", name: \"Login page\" },\r\n  register: { path: \"/register\", name: \"Register page\" },\r\n  forgotPassword: { path: \"/forgot-password\", name: \"Forgot password page\" },\r\n  home: { path: \"/\", name: \"Home\" },\r\n  dashboard: { path: \"/dashboard\", name: \"Dashboard\" },\r\n  campaigns: { path: \"/campaigns\", name: \"Campaigns\" },\r\n  createCampaigns: { path: \"/campaigns/create\", name: \"Create Campaign\" },\r\n  editCampaigns: { path: \"/campaigns/edit\", name: \"Edit Campaign\" },\r\n  ads: { path: \"/ads\", name: \"Ads\" },\r\n  createAds: { path: \"/ads/create\", name: \"Create Ads\" },\r\n  editAds: { path: \"/ads/edit\", name: \"Edit Ads\" },\r\n  adQuestions:{path: \"/ads/questions\", name: \"Questions\"},\r\n  createAdQuestions: { path: \"/ads/questions/create-question\", name: \"Create Questions\" },\r\n  editAdQuestions: { path: \"/ads/questions/edit-question\", name: \"Edit Questions\" },\r\n\r\n  // users: { path: \"/users\", name: \"Users\" },\r\n  // createUser: { path: \"/users/create\", name: \"Create\" },\r\n  // user: { path: \"/users/:id\", name: \"User Details\" }\r\n};\r\n\r\nexport const messages = {\r\n  EMAIL_SENT:\r\n    \"An email is sent to reset your password.\\n Please login to continue.\",\r\n  NETWORK_FAILURE: \" Server not found, Please check your network.\",\r\n  AD_CREATED: \"Ad created Successfully.\",\r\n  AD_UPDATED: \"Ad updated Successfully.\",\r\n  QUESTION_CREATED: \"Question created Successfully.\",\r\n  QUESTION_UPDATED: \"Question updated Successfully.\"\r\n};\r\n\r\nexport const contextQuestionTypes = {\r\n  MCQ4: \"Correct-Incorrect with 4 answers.\",\r\n  MCQ3: \"Correct-Incorrect with 3 answers\",\r\n  TRUEANDFALSE: \"2 answers (TRUE/FALSE)\",\r\n  SQ4: \"Survey Question with 4 answers\",\r\n  SQ3: \"Survey Question with 3 answers\"\r\n};\r\n\r\nexport const contextStatus = {\r\n  ACTIVE: \"ACTIVE\",\r\n  PAUSE: \"PAUSE\"\r\n};\r\n\r\nexport const contextReviewStatus = {\r\n  PENDING: \"PENDING\",\r\n  ACCEPTED: \"ACCEPTED\",\r\n  REJECTED: \"REJECTED\"\r\n};\r\n\r\nexport const userRole = {\r\n  ADMIN: 1,\r\n  EDITOR: 2,\r\n  CLIENT: 3,\r\n  PUBLISHER: 4\r\n};\r\n\r\nexport const userTypes = {\r\n  ADMIN: \"Admin\",\r\n  CLIENT: \"Client\",\r\n  EDITOR: \"Editor\",\r\n  PUBLISHER: \"Publisher\"\r\n};\r\n","import axios from \"axios\";\r\nimport { backendRoutes } from \"./constants\";\r\n\r\nexport const onInitialNetConnection = () => {\r\n  // NetInfo.isConnected.removeEventListener(onInitialNetConnection);\r\n  console.log(\"onInitialNetConnection CALLED\");\r\n};\r\n\r\n/**\r\n * Genric function to make api calls with method post\r\n * @param {apiPost} url  API end point to call\r\n * @param {apiPost} responseSuccess  Call-back function to get success response from api call\r\n * @param {apiPost} responseErr  Call-back function to get error response from api call\r\n * @param {apiPost} requestHeader  Request header to be send to api\r\n * @param {apiPost} body data to be send through api\r\n*/\r\n\r\nexport function apiGet(\r\n    url, \r\n    requestHeader,\r\n    responseSuccess,\r\n    responseErr,\r\n){\r\n    axios({\r\n        baseURL: backendRoutes.BASE_URL,\r\n        url: url,\r\n        method: \"GET\",\r\n        headers: requestHeader\r\n    })\r\n    .then((res) =>{\r\n        responseSuccess(res)\r\n    })\r\n    .catch((err) => {\r\n        responseErr(err)\r\n    })  \r\n}\r\n\r\nexport function apiPost(\r\n  url,\r\n  body,\r\n  requestHeader,\r\n  responseSuccess,\r\n  responseErr,\r\n) {\r\n  axios({\r\n    baseURL: backendRoutes.BASE_URL,\r\n    url: url,\r\n    method: \"POST\",\r\n    data: body,\r\n    headers: requestHeader\r\n  })\r\n    .then(response => {\r\n      responseSuccess(response);\r\n    })\r\n    .catch(err => {\r\n      responseErr(err);\r\n    });\r\n\r\n  //   fetch(url, {\r\n  //     method: \"POST\",\r\n  //     headers: requestHeader,\r\n  //     body: body\r\n  //   })\r\n  //     .then(errorHandler)\r\n  //     .then(response => response.json())\r\n  //     .then(responseFetched => checkAPIStatus(responseFetched))\r\n  //     .then(responseProcessed =>\r\n  //       responseSuccess(responseProcessed.data, responseProcessed.message)\r\n  //     )\r\n  //     .catch(err => responseErr(err));\r\n}\r\n\r\nexport async function apiPostForFileUpload(\r\n  url,\r\n  body,\r\n  imageURI,\r\n  responseSuccess,\r\n  responseErr\r\n) {\r\n  let formdata = new FormData();\r\n\r\n  formdata.append(\"data\", JSON.stringify(body));\r\n  formdata.append(\"encrypt_flag\", 0);\r\n\r\n  const uriParts = imageURI.split(\".\");\r\n  const fileType = uriParts.length > 0 ? uriParts[uriParts.length - 1] : \"jpeg\";\r\n  formdata.append(\"fileName\", {\r\n    uri: imageURI,\r\n    name: `testPhotoName.${fileType}`,\r\n    type: `image/${fileType}`\r\n  });\r\n\r\n  fetch(url, {\r\n    method: \"POST\",\r\n    body: formdata,\r\n    headers: {\r\n      Sessiontoken: \"vMoDbd5W5Z3JJVhRPhZbIpnWIlR1MX\",\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"multipart/form-data\"\r\n    }\r\n  })\r\n    .then(errorHandler)\r\n    .then(response => response.json())\r\n    .then(responseFetched => checkAPIStatus(responseFetched))\r\n    .then(responseProcessed =>\r\n      responseSuccess(responseProcessed.data, responseProcessed.message)\r\n    )\r\n    .catch(err => responseErr(err));\r\n}\r\n\r\n//Error Handler\r\n/**\r\n *\r\n * @param {errorHandler} response Generic function to handle error occur in api\r\n */\r\nconst errorHandler = response => {\r\n  if (\r\n    (response.status >= 200 && response.status < 300) ||\r\n    response.status === 401 ||\r\n    response.status === 400\r\n  ) {\r\n    return Promise.resolve(response);\r\n  } else {\r\n    var error = new Error(response.statusText || response.status);\r\n    error.response = response;\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n\r\nconst checkAPIStatus = reponseFetched => {\r\n  if (\r\n    reponseFetched.res_data !== undefined &&\r\n    reponseFetched.res_data.data !== undefined\r\n  ) {\r\n    let actualResponse = reponseFetched.res_data;\r\n    let status = actualResponse.status || false;\r\n    if (status) {\r\n      return Promise.resolve({\r\n        data: actualResponse.data,\r\n        message: actualResponse.message\r\n      });\r\n    } else {\r\n      return Promise.reject(actualResponse);\r\n    }\r\n  } else {\r\n    return Promise.reject(reponseFetched);\r\n  }\r\n};\r\n","export const validations = {\r\n    // eslint-disable-next-line\r\n    EMAIL: {\r\n        pattern: /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n        message: \"Invalid Email address\"\r\n    },\r\n    NUMBER: {\r\n        pattern: /^\\d*$/,\r\n        message: \"Please enter numeric values.\"\r\n    },\r\n    EMPTY: {\r\n        pattern: /^(.|\\s)*\\S(.|\\s)*/,\r\n        message: \"This field is required\"\r\n    },\r\n    PASSWORD: {\r\n        pattern: /^(?=\\S*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[!@#$%^&*()+_\\-=}{[\\]|:;\"\\/?.><,`~]).{8,15}$/,\r\n        message: \"Password must have at least 1 uppercase, 1 lowercase, 1 special character pattern.\"\r\n    }\r\n};\r\n\r\nexport function handleValidation(value, regex) {\r\n    // we could get fancy here with validations based on type of input\r\n    // could be put in a form hook library and imported\r\n    if (value) {\r\n        if (value && regex && value.match(regex)) return true;\r\n        return false;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n\r\n    // console.log(\"value && regex && value.match(regex): \", !!(value && regex && value.match(regex)))\r\n    // return !!(value && regex && value.match(regex))\r\n}\r\n\r\nexport function handleCustomValidation(value, regex) {\r\n    // we could get fancy here with validations based on type of input\r\n    // could be put in a form hook library and imported\r\n    if (value) {\r\n        if (value && regex && value.match(regex)) return true;\r\n        return false;\r\n    }\r\n    else if(value === '') {\r\n        return false;\r\n    }\r\n    return true\r\n    // console.log(\"value && regex && value.match(regex): \", !!(value && regex && value.match(regex)))\r\n    // return !!(value && regex && value.match(regex))\r\n}\r\n\r\nexport function isObjectEmpty(obj) {\r\n    for(var key in obj) {\r\n        if(obj.hasOwnProperty(key))\r\n            return false;\r\n    }\r\n    return true;\r\n}","import { useState } from \"react\";\r\nimport { validations } from \"../utils/validations\";\r\n\r\n//Hooks for text fields input\r\nexport function useInput(\r\n  name,\r\n  defaultValue = \"\",\r\n  validate = () => {},\r\n  regex = \"\",\r\n  isClearInput = false\r\n) {\r\n  // set up the state for the inputs value prop and set it to the default value\r\n  const [value, setValue] = useState(defaultValue);\r\n  //set up state for the inputs error prop\r\n  const [error, setError] = useState(null);\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  // set up the event handler for onChange event\r\n  function handleChange(e) {\r\n    // set the state no matter what\r\n    setValue(e.target.value);\r\n    // handleValidate();\r\n    // cancel any error\r\n    setError(null);\r\n    setErrorMessage(\"\");\r\n  }\r\n\r\n  function clearInput() {\r\n    setValue(defaultValue);\r\n    setError(null);\r\n  }\r\n\r\n  // set up event handler for onBlur, if value is not set, setError to true\r\n  function handleBlur() {\r\n    // if (!value) return setError(true)\r\n    handleValidate();\r\n  }\r\n\r\n  // call validate if supplied and set error appropriately\r\n  function handleValidate() {\r\n    if (validate === null) {\r\n      return true;\r\n    }\r\n    if (!value) {\r\n      setError(true);\r\n      setErrorMessage(validations.EMPTY.message);\r\n      return false;\r\n    }\r\n    const isValid = validate && validate(value, regex.pattern);\r\n    if (isValid === true) {\r\n      setError(false);\r\n      setErrorMessage(\"\");\r\n    } else {\r\n      setError(true);\r\n      setErrorMessage(regex.message);\r\n    }\r\n    return isValid;\r\n  }\r\n\r\n  return {\r\n    props: {\r\n      name,\r\n      value,\r\n      onChange: handleChange,\r\n      onBlur: handleBlur,\r\n      valid: error === true ? false : error !== null ? true : null,\r\n      invalid: error === true ? true : error !== null ? false : null\r\n    },\r\n    validate: handleValidate,\r\n    helperText: errorMessage,\r\n    clearInput,\r\n    error\r\n  };\r\n}\r\n\r\n// Hook for form submit button.\r\nexport function useSubmit(inputs, success) {\r\n  // set up the state for the inputs causing errors\r\n  const [errorItems, setErrorItems] = useState(null);\r\n\r\n  // handle submit\r\n  function handleSubmit(e) {\r\n    e.preventDefault(); //prevent page refresh\r\n    let data = {};\r\n    //validate every input (in case there was no blur event)\r\n    const errorItems = inputs.filter(input => input && input.validate() === false);\r\n    console.log(\"Error items: \", errorItems);\r\n    //persist the error items to state\r\n    setErrorItems(errorItems);\r\n    // if no errors, call success with name, value pairs as parameter\r\n    if (errorItems && errorItems.length === 0) {\r\n      inputs.forEach(({ props: { name, value } }) => {\r\n        data = {\r\n          ...data,\r\n          [name]: value\r\n        };\r\n      });\r\n      success &&\r\n        success(\r\n          // inputs.map(({ props: { name, value } }) => ({\r\n          //     [name]: value,\r\n          // }))\r\n          data\r\n        );\r\n    }\r\n  }\r\n\r\n  return {\r\n    props: {\r\n      onSubmit: handleSubmit\r\n    },\r\n    errorItems\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\n\r\nconst useAlert = (visibility) => {\r\n\r\n    const [isVisible, setIsVisible] = React.useState(visibility);\r\n    const [message, setMessage] = React.useState('');\r\n\r\n\r\n    const changeVisibility = (bool) => {\r\n        setIsVisible(bool);\r\n    }\r\n\r\n    const handleMessage = (message) => {\r\n        setMessage(message); \r\n    }\r\n\r\n    return {\r\n        isVisible,\r\n        message,\r\n        handleMessage,\r\n        changeVisibility\r\n    }\r\n\r\n}\r\n\r\nexport default useAlert","import React, { useState } from 'react'\r\nimport {\r\n\tPagination,\r\n\tPaginationItem,\r\n\tPaginationLink,\r\n\tDropdown,\r\n\tDropdownToggle,\r\n\tDropdownMenu,\r\n\tDropdownItem,\r\n} from \"reactstrap\";\r\n\r\nexport default function CustomPagination(props) {\r\n\r\n\t// const [currentPage, setCurrentPage] = useState(1)\r\n\tconst [isDropDownOpen, setIsDropDownOpen] = useState(false);\r\n\r\n\r\n\tconst totalPages = Math.ceil(props.totalRecords / props.pageLimit);\r\n\r\n\tconst handleDropDown = () => {\r\n\t\tsetIsDropDownOpen(!isDropDownOpen);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"d-flex flex-row justify-content-between align-items-center\">\r\n\t\t\t<Dropdown isOpen={isDropDownOpen} toggle={handleDropDown}>\r\n\t\t\t\t<DropdownToggle caret>\r\n\t\t\t\t\t{props.pageLimit}\r\n\t\t\t\t</DropdownToggle>\r\n\t\t\t\t<DropdownMenu>\r\n\t\t\t\t\t<DropdownItem onClick={() =>\r\n\t\t\t\t\t\tprops.handleSizePerPage(5)\r\n\t\t\t\t\t}>5</DropdownItem>\r\n\t\t\t\t\t<DropdownItem onClick={() =>\r\n\t\t\t\t\t\tprops.handleSizePerPage(10)\r\n\t\t\t\t\t}>10</DropdownItem>\r\n\t\t\t\t\t<DropdownItem onClick={() =>\r\n\t\t\t\t\t\tprops.handleSizePerPage(20)\r\n\t\t\t\t\t}>20</DropdownItem>\r\n\t\t\t\t</DropdownMenu>\r\n\t\t\t</Dropdown>\r\n\t\t\t<div className='align-justify'>\r\n\t\t\t\t<Pagination>\r\n\t\t\t\t\t<PaginationItem disabled={props.currentPage <= 1}>\r\n\t\t\t\t\t\t<PaginationLink previous tag=\"button\" onClick={props.handlePreviousClick}>Prev</PaginationLink>\r\n\t\t\t\t\t</PaginationItem>\r\n\t\t\t\t\t{[...Array(totalPages)].map((page, i) => (\r\n\t\t\t\t\t\t<PaginationItem active={i + 1 === props.currentPage} key={i + 1}>\r\n\t\t\t\t\t\t\t<PaginationLink onClick={e => props.handlePageClick(e, i + 1)} href=\"#\">\r\n\t\t\t\t\t\t\t\t{i + 1}\r\n\t\t\t\t\t\t\t</PaginationLink>\r\n\t\t\t\t\t\t</PaginationItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<PaginationItem disabled={props.currentPage === totalPages}>\r\n\t\t\t\t\t\t<PaginationLink next tag=\"button\" onClick={props.handleNextClick}>Next</PaginationLink>\r\n\t\t\t\t\t</PaginationItem>\r\n\t\t\t\t</Pagination>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\n","export function convertFilterObjects(filters) {\r\n  let filterKeys = Object.keys(filters)\r\n  // console.log(filterKeys)\r\n\r\n  let filterValues = Object.values(filters)\r\n  // console.log(filterValues)\r\n\r\n  let filterQuery = {}\r\n\r\n  filterKeys.forEach((key, i) => {\r\n    filterValues.forEach((val, index) => {\r\n      if (i === index) {\r\n        filterQuery[key] = val.filterVal\r\n      }\r\n\r\n    })\r\n  })\r\n  return filterQuery\r\n}\r\n\r\nexport function convertKeysToNames(key) {\r\n  switch (key) {\r\n    case \"campaign_id\":\r\n      return \"Id\";\r\n    case \"name\":\r\n      return \"Name\";\r\n    case \"description\":\r\n      return \"Description\";\r\n    case \"start_time\":\r\n      return \"Start Time\";\r\n    case \"end_time\":\r\n      return \"End Time\";\r\n    case \"email\":\r\n      return \"Email\";\r\n    case \"ad_id\":\r\n      return \"Ad_id\";\r\n    case \"vast_url\":\r\n      return \"VAST url\";\r\n    case \"width\":\r\n      return \"Width\";\r\n    case \"height\":\r\n      return \"Height\";\r\n    default:\r\n      return key;\r\n  }\r\n}\r\n","import { frontendRoutes } from \"./utils/constants\";\r\n\r\nexport default {\r\n  items: [\r\n    {\r\n      name: frontendRoutes.dashboard.name,\r\n      url: frontendRoutes.dashboard.path,\r\n      icon: \"fa fa-tachometer\",\r\n      badge: {\r\n        variant: \"info\",\r\n        text: \"NEW\"\r\n      }\r\n    },\r\n    {\r\n      title: true,\r\n      name: \"Actions\",\r\n      wrapper: {\r\n        // optional wrapper object\r\n        element: \"\", // required valid HTML5 element tag\r\n        attributes: {} // optional valid JS object with JS API naming ex: { className: \"my-class\", style: { fontFamily: \"Verdana\" }, id: \"my-id\"}\r\n      },\r\n      class: \"\" // optional class names space delimited list for title item ex: \"text-center\"\r\n    },\r\n    // {\r\n    //   name: \"Users\",\r\n    //   url: \"/users\",\r\n    //   icon: \"cui-user\"\r\n    // },\r\n    {\r\n      name: frontendRoutes.campaigns.name,\r\n      url: frontendRoutes.campaigns.path,\r\n      icon: \"fa fa-bullhorn\"\r\n    },\r\n    {\r\n      name: frontendRoutes.ads.name,\r\n      url: frontendRoutes.ads.path,\r\n      icon: \"fa fa-desktop\"\r\n    }\r\n  ]\r\n};\r\n","import React, { useEffect, useState } from 'react'\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport filterFactory, { textFilter } from \"react-bootstrap-table2-filter\";\r\n\r\n\r\nimport {\r\n  Badge,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Row,\r\n  Table,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  CardFooter,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport { frontendRoutes, backendRoutes } from '../../utils/constants';\r\nimport CustomPagination from '../../customComponents/CustomPagination';\r\nimport { convertFilterObjects, convertKeysToNames } from '../../utils/converters';\r\nimport { apiPost } from '../../utils/serviceManager';\r\n\r\nconst RemoteSort = props => (\r\n  <div>\r\n    <BootstrapTable\r\n      remote={{ sort: true, filter: true }}\r\n      bootstrap4\r\n      // remote\r\n      keyField=\"id\"\r\n      data={props.data}\r\n      columns={props.columns}\r\n      striped\r\n\t\t\thover\r\n\t\t\t// condensed\r\n      //pagination={paginationFactory({ page: props.page, sizePerPage: props.sizePerPage, totalSize: props.totalSize })}\r\n      filter={filterFactory()}\r\n      onTableChange={props.onTableChange}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default function Campaigns(props) {\r\n  const [columns, setColumns] = useState([]);\r\n  const [row, setRow] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sizePerPage, setSizePerPage] = useState(10)\r\n  const [totalRecords, setTotalRecords] = useState(0)\r\n  // const [query, setQuery] = {}\r\n\r\n  function ActionColumn(cell, row, rowIndex, formatExtraData) {\r\n    return (\r\n      <div>\r\n        <Button\r\n          color=\"secondary\"\r\n          onClick={() => {\r\n            props.history.push({\r\n              pathname: frontendRoutes.editCampaigns.path,\r\n              state: { data: row },\r\n            });\r\n          }}\r\n        >\r\n          Edit\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function getCampaignsLength() {\r\n    apiPost(\r\n      backendRoutes.CAMPAIGN + 'count',\r\n      {},\r\n      { \"Content-Type\": \"application/json\" },\r\n      successRes => {\r\n        console.log(\"Total campaigns: \", successRes)\r\n        setTotalRecords(successRes.data.data)\r\n      },\r\n      errorRes => {\r\n        console.log(\"error in Total campaigns api: \", errorRes)\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  function getCampaigns(query, startIndex, endIndex) {\r\n    apiPost(\r\n      backendRoutes.CAMPAIGN + 'get',\r\n      query,\r\n      {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      response => {\r\n        // console.log(\"Api response: \", response)\r\n        let apiData = response.data.data;\r\n        let columnData = Object.keys(apiData[0])\r\n          .filter(\r\n            (key) =>\r\n              // key !== \"createdAt\" &&\r\n              // key !== \"updatedAt\" &&\r\n              key !== \"ads\"\r\n            // key !== \"campaign_id\"\r\n            //   key !== \"Owner\" &&\r\n            //   key !== \"Monitor\"\r\n          )\r\n          .map((key) => {\r\n            return {\r\n              dataField: key,\r\n              // text: key,\r\n              text: convertKeysToNames(key),\r\n              sort: true,\r\n              filter: textFilter()\r\n              // filter: textFilter({\r\n              //   // configuration options for filter\r\n              //   placeholder: \" \",\r\n              // }),\r\n            };\r\n          });\r\n        columnData.push({\r\n          formatter: ActionColumn,\r\n          // headerAttrs: { width: 50 },\r\n          // attrs: { width: 50, class: \"EditRow\" },\r\n          text: \"Actions\",\r\n          // headerStyle: { width: \"50px\" },\r\n          // style: { height: \"30px\" }\r\n        });\r\n\r\n        setColumns(columnData);\r\n        setRow(apiData);\r\n\r\n      },\r\n      error => {\r\n        console.log(\"Api error: \", error)\r\n      }\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCampaignsLength()\r\n    getCampaigns(\r\n      {\r\n        \"pagination\": {\r\n          \"page\": currentPage,\r\n          \"page_size\": sizePerPage\r\n        }\r\n      }\r\n    )\r\n  }, [])\r\n\r\n\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder, data, filters }) => {\r\n    console.log(\"Operation type: \", type)\r\n    console.log(\"sort props: \", { sortField, sortOrder, data, filters })\r\n\r\n\r\n    if (type === 'filter') {\r\n\r\n      let filterQuery = convertFilterObjects(filters)\r\n      console.log(\"filterQuery: \", filterQuery)\r\n\r\n      getCampaigns(\r\n        {\r\n          \"pagination\": {\r\n            \"page\": currentPage,\r\n            \"page_size\": sizePerPage\r\n          },\r\n          filter: filterQuery\r\n        }\r\n\r\n      )\r\n\r\n    }\r\n\r\n    // if (type === 'pagination') {\r\n    //   const currentIndex = (page - 1) * sizePerPage;\r\n    //   console.log(\"Current index: \", currentIndex)\r\n    //   getCampaigns(\r\n    //     {\r\n    //       \"pagination\": {\r\n    //         \"page\": page,\r\n    //         \"page_size\": sizePerPage,\r\n\r\n    //       }\r\n    //     },\r\n    //     currentIndex,\r\n    //     currentIndex + sizePerPage\r\n    //   )\r\n    // }\r\n\r\n    if (type === 'sort') {\r\n      let result;\r\n      if (sortOrder === 'asc') {\r\n\r\n        getCampaigns(\r\n          {\r\n            \"pagination\": {\r\n              \"page\": currentPage,\r\n              \"page_size\": sizePerPage\r\n            },\r\n            \"order\": [\r\n              {\r\n                \"desc\": false,\r\n                \"name\": sortField\r\n              }\r\n            ]\r\n          }\r\n        )\r\n      } else {\r\n        getCampaigns(\r\n          {\r\n            \"pagination\": {\r\n              \"page\": currentPage,\r\n              \"page_size\": sizePerPage\r\n            },\r\n            \"order\": [\r\n              {\r\n                \"desc\": true,\r\n                \"name\": sortField\r\n              }\r\n            ]\r\n          }\r\n        )\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  const displayTable = () => {\r\n    if (columns.length > 0 || row.length > 0) {\r\n      return (\r\n        <RemoteSort\r\n          data={row}\r\n          columns={columns}\r\n          onTableChange={handleTableChange}\r\n          page={currentPage}\r\n          sizePerPage={sizePerPage}\r\n          totalSize={14}\r\n        />\r\n      );\r\n    } else {\r\n      return <div>Loading...</div>;\r\n    }\r\n  };\r\n\r\n  const handleSizePerPage = (pageSize) => {\r\n    // e.preventDefault();\r\n    // let selected = data.selected;\r\n    // let offset = Math.ceil(selected * sizePerPage);\r\n    setSizePerPage(() => {\r\n      setCurrentPage(1)\r\n      getCampaigns(\r\n        {\r\n          \"pagination\": {\r\n            \"page\": 1,\r\n            \"page_size\": pageSize\r\n          }\r\n        }\r\n      )\r\n      return pageSize\r\n    })\r\n  };\r\n\r\n  const handlePageClick = (e, i) => {\r\n    e.preventDefault();\r\n    // let selected = data.selected;\r\n    // let offset = Math.ceil(selected * sizePerPage);\r\n    setCurrentPage(() => {\r\n      getCampaigns(\r\n        {\r\n          \"pagination\": {\r\n            \"page\": i,\r\n            \"page_size\": sizePerPage\r\n          }\r\n        }\r\n      )\r\n      return i\r\n    })\r\n  };\r\n\r\n  const handlePreviousClick = (e) => {\r\n    setCurrentPage(() => {\r\n      getCampaigns(\r\n        {\r\n          \"pagination\": {\r\n            \"page\": currentPage - 1,\r\n            \"page_size\": sizePerPage\r\n          }\r\n        }\r\n      )\r\n      return currentPage - 1\r\n    })\r\n  }\r\n\r\n  const handleNextClick = (e) => {\r\n    setCurrentPage(() => {\r\n      getCampaigns(\r\n        {\r\n          \"pagination\": {\r\n            \"page\": currentPage + 1,\r\n            \"page_size\": sizePerPage\r\n          }\r\n        }\r\n      )\r\n      return currentPage + 1\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container fluid={true}>\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          <Col xl={12}>\r\n            <Card>\r\n              <CardHeader className=\"d-flex flex-row justify-content-between align-items-center\">\r\n                <div>\r\n                  <i className=\"fa fa fa-table\"></i> Campaigns list\r\n                  {/* <small className=\"text-muted\">list</small> */}\r\n                </div>\r\n                <Button\r\n                  color=\"success\"\r\n                  onClick={() => {\r\n                    props.history.push(frontendRoutes.createCampaigns.path);\r\n                  }}\r\n                >\r\n                  Create Campaign\r\n                </Button>\r\n              </CardHeader>\r\n              <CardBody>{displayTable()}</CardBody>\r\n              <CardFooter>\r\n                {/* {renderPagination(totalRecords, sizePerPage, currentPage)} */}\r\n                <CustomPagination\r\n                  totalRecords={totalRecords}\r\n                  pageLimit={sizePerPage}\r\n                  pageNeighbors={0}\r\n                  currentPage={currentPage}\r\n                  handlePageClick={handlePageClick}\r\n                  handleNextClick={handleNextClick}\r\n                  handlePreviousClick={handlePreviousClick}\r\n                  handleSizePerPage={handleSizePerPage}\r\n                />\r\n              </CardFooter>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  )\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport { frontendRoutes } from './utils/constants';\r\nimport Campaigns from './views/Campaigns/Campaigns';\r\nimport CreateCampaign from './views/Campaigns/CreateCampaign';\r\nconst Dashboard = React.lazy(() => import('./views/Dashboard'));\r\nconst Users = React.lazy(() => import('./views/Users/Users'));\r\nconst User = React.lazy(() => import('./views/Users/User'));\r\nconst EditCampaign = React.lazy(() => import('./views/Campaigns/EditCampaign'));\r\nconst Ads = React.lazy(() => import('./views/Ads/Ads'));\r\nconst CreateAd = React.lazy(() => import('./views/Ads/CreateAd'));\r\nconst AdCreationForm = React.lazy(() => import('./views/Ads/AdCreationForm'));\r\nconst EditAd = React.lazy(() => import('./views/Ads/EditAd'));\r\nconst AdQuestions = React.lazy(() => import('./views/Ads/questions/AdQuestions'));\r\nconst CreateQAForm = React.lazy(() => import('./views/Ads/questions/CreateQAForm'));\r\nconst EditQAForm = React.lazy(() => import('./views/Ads/questions/EditQAForm'));\r\n\r\n\r\n\r\n// https://github.com/ReactTraining/react-router/tree/master/packages/react-router-config\r\nconst routes = [\r\n  { path: frontendRoutes.home.path, exact: true, name: frontendRoutes.home.name },\r\n  { path: frontendRoutes.dashboard.path, exact: true, name: frontendRoutes.dashboard.name , component: Dashboard },\r\n  // { path: '/users', exact: true,  name: 'Users', component: Users },\r\n  // { path: '/users/:id', exact: true, name: 'User Details', component: User },\r\n  { path: frontendRoutes.campaigns.path, exact: true, name: frontendRoutes.campaigns.name, component: Campaigns },\r\n  { path: frontendRoutes.createCampaigns.path, exact: true, name: frontendRoutes.createCampaigns.name, component: CreateCampaign },\r\n  { path: frontendRoutes.editCampaigns.path, exact: true, name: frontendRoutes.editCampaigns.name, component: EditCampaign },\r\n  { path: frontendRoutes.ads.path, exact: true, name: frontendRoutes.ads.name, component: Ads },\r\n  { path: frontendRoutes.createAds.path, exact: true, name: frontendRoutes.createAds.name, component: AdCreationForm },\r\n  { path: frontendRoutes.editAds.path, exact: true, name: frontendRoutes.editAds.name, component: EditAd },\r\n  { path: frontendRoutes.adQuestions.path, exact: true, name: frontendRoutes.adQuestions.name, component: AdQuestions },\r\n  { path: frontendRoutes.createAdQuestions.path, exact: true, name: frontendRoutes.createAdQuestions.name, component: CreateQAForm },\r\n  { path: frontendRoutes.editAdQuestions.path, exact: true, name: frontendRoutes.editAdQuestions.name, component: EditQAForm },\r\n  // { path: frontendRoutes.dashboard.path, exact: true, name: frontendRoutes.dashboard.name , component: Dashboard },\r\n\r\n\r\n];\r\n\r\nexport default routes;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Row,\r\n  Form,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input,\r\n  InputGroupText,\r\n  Button,\r\n  FormFeedback,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport { useInput, useSubmit } from \"../../hooks/form\";\r\nimport { handleValidation, validations } from \"../../utils/validations\";\r\nimport { backendRoutes, frontendRoutes, messages, userTypes } from \"../../utils/constants\";\r\nimport axios from \"axios\";\r\nimport { apiPost, apiGet } from \"../../utils/serviceManager\";\r\nimport useAlert from \"../../hooks/useAlert\";\r\nimport Select from 'react-select'\r\n\r\n\r\nexport default function CreateCampaign(props) {\r\n  let name, description;\r\n\r\n  name = useInput(\"name\", \"\", handleValidation, validations.EMPTY);\r\n  description = useInput(\"description\", \"\", handleValidation, validations.EMPTY);\r\n\r\n  const [startDate, setStartDate] = useState(new Date())\r\n  const [endDate, setEndDate] = useState(new Date())\r\n\tconst [adOptions, setAdOptions] = useState([])\r\n\r\n\r\n  const alert = useAlert(false);\r\n  const submit = useSubmit([name, description], handleSuccess);\r\n\r\n  function handleSuccess(formData) {\r\n    formData = {...formData, start: startDate.toISOString(), end: endDate.toISOString()}\r\n    console.log(\"Data Length==> \", formData);\r\n    createCampaign(formData)\r\n    name.clearInput();\r\n    description.clearInput();\r\n    setStartDate(new Date())\r\n    setEndDate(new Date())\r\n  }\r\n\r\n  function handleAlertVisibility() {\r\n    alert.changeVisibility(false);\r\n  }\r\n\r\n  function createCampaign(formData) {\r\n    apiPost(\r\n      backendRoutes.CAMPAIGN + 'insert',\r\n      {data: formData},\r\n      {\r\n        \"Content-Type\": \"application/json\",\r\n        //Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n      successRes => {\r\n        console.log(\"campaign creation success: \", successRes);\r\n        alert.changeVisibility(true);\r\n        alert.handleMessage(\"campaign creation success\");\r\n        setTimeout(() => {\r\n          alert.changeVisibility(false);\r\n        }, 5000);\r\n      },\r\n      errorRes => {\r\n        console.log(\"campaign creation error: \", errorRes);\r\n        if (errorRes.response && errorRes.response.data) {\r\n          alert.handleMessage(errorRes.response.data.message);\r\n        } else {\r\n          alert.handleMessage(messages.NETWORK_FAILURE);\r\n        }\r\n        setTimeout(() => {\r\n          alert.changeVisibility(false);\r\n        }, 5000);\r\n      }\r\n    )\r\n  }\r\n\r\n  function handleStartDate(date) {\r\n    console.log(\"Start date selected: \", date.toISOString())\r\n    setStartDate(date)\r\n  }\r\n\r\n  function handleEndDate(date) {\r\n    console.log(\"End date selected: \", date.toISOString())\r\n    setEndDate(date)\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\t\tgetAds()\r\n\t}, [])\r\n\r\n\tfunction getAds() {\r\n\t\tapiPost(\r\n\t\t\tbackendRoutes.ADS + 'get',\r\n\t\t\t{},\r\n\t\t\t{\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tresponse => {\r\n\t\t\t\t// console.log(\"Api response: \", response)\r\n\t\t\t\tlet apiData = response.data.data;\r\n\t\t\t\tlet optionsArr = apiData\r\n\t\t\t\t\t.map((data, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t{ label: data.name, value: data.ad_id }\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\tconsole.log('optionsArr: ', optionsArr)\r\n\t\t\t\tsetAdOptions(optionsArr)\r\n\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tconsole.log(\"Api error: \", error)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\tfunction handleSelectInput(data) {\r\n\t\t// const name = e.target.name;\r\n\t\t// const value = e.target.value;\r\n\t\tconsole.log(\"Selected input name: \", data);\r\n\t\t// console.log(\"Selected input value: \", value);\r\n\t\t// if (name === \"colors\") {\r\n\t\t//   // setOwnerId(value);\r\n\t\t// }\r\n\t\t// if (name === \"monitor\") {\r\n\t\t//   // setMonitorId(value);\r\n\t\t// }\r\n\t}\r\n\r\n\tfunction renderAdSelect() {\r\n\t\tif (adOptions.length > 0) {\r\n\t\t\tlet defaultOptions = []\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tdefaultValue={defaultOptions}\r\n\t\t\t\t\t\t//styles={customStyles}\r\n\t\t\t\t\t\tisMulti\r\n\t\t\t\t\t\tname=\"colors\"\r\n\t\t\t\t\t\toptions={adOptions}\r\n\t\t\t\t\t\tclassName=\"basic-multi-select\"\r\n\t\t\t\t\t\tclassNamePrefix=\"select\"\r\n\t\t\t\t\t\tonChange={handleSelectInput}\r\n\t\t\t\t\t\tplaceholder='Select ads for the campaign.'\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<p></p>\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn (\r\n\t\t\t\t<p>\r\n\t\t\t\t\tloading...\r\n\t\t\t\t</p>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"animated fadeIn\" >\r\n      <Row>\r\n        <Col xl=\"8\">\r\n          <Card>\r\n            <CardHeader>\r\n              <i className=\"fa fa-align-justify\"></i> Campaign{\" \"}\r\n              <small className=\"text-muted\">creation form</small>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Alert\r\n                color=\"danger\"\r\n                isOpen={alert.isVisible}\r\n                toggle={handleAlertVisibility}\r\n              >\r\n                {alert.message}\r\n              </Alert>\r\n              <Form noValidate {...submit.props}>\r\n                <h1>Register</h1>\r\n                <p className=\"text-muted\">Create a campaign</p>\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className=\"icon-user\"></i>\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    autoComplete=\"on\"\r\n                    {...name.props}\r\n                  />\r\n                  <FormFeedback>{name.helperText}</FormFeedback>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className=\"icon-info\"></i>\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Description\"\r\n                    autoComplete=\"off\"\r\n                    {...description.props}\r\n                  />\r\n                  <FormFeedback>{description.helperText}</FormFeedback>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className=\"icon-calendar\"></i>\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <DatePicker\r\n                    selected={startDate}\r\n                    onChange={handleStartDate}\r\n                    showTimeSelect\r\n                  //dateFormat=\"ISO\"\r\n                  />\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className=\"icon-calendar\"></i>\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <DatePicker\r\n                    selected={endDate}\r\n                    onChange={handleEndDate}\r\n                    showTimeSelect\r\n                  //dateFormat=\"ISO\"\r\n                  />\r\n                </InputGroup>\r\n                {renderAdSelect()}\r\n                <Button color=\"success\" block>\r\n                  Create Campaign\r\n                </Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component, Suspense } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport * as router from 'react-router-dom';\r\nimport { Container } from 'reactstrap';\r\n\r\nimport {\r\n  AppAside,\r\n  AppFooter,\r\n  AppHeader,\r\n  AppSidebar,\r\n  AppSidebarFooter,\r\n  AppSidebarForm,\r\n  AppSidebarHeader,\r\n  AppSidebarMinimizer,\r\n  AppBreadcrumb2 as AppBreadcrumb,\r\n  AppSidebarNav2 as AppSidebarNav,\r\n} from '@coreui/react';\r\n// sidebar nav config\r\nimport navigation from '../../_nav';\r\n// routes config\r\nimport routes from '../../routes';\r\n\r\nconst DefaultAside = React.lazy(() => import('./DefaultAside'));\r\nconst DefaultFooter = React.lazy(() => import('./DefaultFooter'));\r\nconst DefaultHeader = React.lazy(() => import('./DefaultHeader'));\r\n\r\nclass DefaultLayout extends Component {\r\n\r\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\n  signOut(e) {\r\n    e.preventDefault()\r\n    this.props.history.push('/login')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <AppHeader fixed>\r\n          <Suspense  fallback={this.loading()}>\r\n            <DefaultHeader onLogout={e=>this.signOut(e)}/>\r\n          </Suspense>\r\n        </AppHeader>\r\n        <div className=\"app-body\">\r\n          <AppSidebar fixed display=\"lg\">\r\n            <AppSidebarHeader />\r\n            <AppSidebarForm />\r\n            <Suspense>\r\n            <AppSidebarNav navConfig={navigation} {...this.props} router={router}/>\r\n            </Suspense>\r\n            <AppSidebarFooter />\r\n            <AppSidebarMinimizer />\r\n          </AppSidebar>\r\n          <main className=\"main\">\r\n            <AppBreadcrumb appRoutes={routes} router={router}/>\r\n            <Container fluid>\r\n              <Suspense fallback={this.loading()}>\r\n                <Switch>\r\n                  {routes.map((route, idx) => {\r\n                    return route.component ? (\r\n                      <Route\r\n                        key={idx}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        name={route.name}\r\n                        render={props => (\r\n                          <route.component {...props} />\r\n                        )} />\r\n                    ) : (null);\r\n                  })}\r\n                  <Redirect from=\"/\" to=\"/dashboard\" />\r\n                </Switch>\r\n              </Suspense>\r\n            </Container>\r\n          </main>\r\n          <AppAside fixed>\r\n            <Suspense fallback={this.loading()}>\r\n              <DefaultAside />\r\n            </Suspense>\r\n          </AppAside>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DefaultLayout;\r\n"],"sourceRoot":""}